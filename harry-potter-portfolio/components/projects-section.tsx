"use client"

import { useState } from "react"
import { motion } from "framer-motion"
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { ChevronDown, ChevronUp, Code, BookOpen, Shield, Layout, Film } from "lucide-react"
import Image from "next/image"
import { useMediaQuery } from "@/hooks/use-media-query"

const projects = [
  {
    id: "reddit-redesign",
    title: "Reddit Redesign for Enhanced User Experience",
    type: "UI/UX Design Project",
    period: "October 2024",
    description:
      "Redesigned Reddit's interface to improve user navigation, content discovery, and accessibility. This project features a streamlined onboarding process, intuitive navigation, and a modernized UI that makes the platform more approachable for new users.",
    technologies: ["Moqups", "UI/UX Design", "Wireframing", "User Flows", "Prototyping"],
    responsibilities: [
      "Redesigned Reddit's complex interface to improve user navigation and content discovery",
      "Created a streamlined onboarding process to make the platform more approachable for new users",
      "Developed intuitive navigation patterns to address common pain points with Reddit's layout",
      "Ensured a cohesive experience across both web and mobile platforms",
      "Improved accessibility features to make the platform more inclusive",
    ],
    icon: Layout,
    color: "from-[#0E1A40] to-[#946B2D]", // Ravenclaw colors for wisdom/design
    demoLink: "https://app.moqups.com/Wd4bvKcVQc/view/page/ad64222d5",
  },
  {
    id: "netflix-ui",
    title: "Netflix UI Designing",
    type: "UI/UX Design Project",
    period: "October 2024",
    description:
      "Developed core screens for a Netflix-like application, including Splash, Login, Signup, Profile Selection, and Home. The project emphasizes user-friendly interactions with clear action prompts and accessibility features.",
    technologies: ["Moqups", "UI/UX Design", "Wireframing", "User Flows", "Prototyping"],
    responsibilities: [
      "Designed core screens for a Netflix-like application (Splash, Login, Signup, Profile Selection, Home)",
      "Created user-friendly interactions with clear action prompts throughout the user journey",
      "Implemented accessibility features to ensure inclusive design",
      "Developed a visually cohesive and accessible flow for users across all screens",
      "Focused on delivering a smooth, intuitive experience that mimics Netflix's successful UI patterns",
    ],
    icon: Film,
    color: "from-[#740001] to-[#D3A625]", // Gryffindor colors for entertainment
    demoLink: "https://app.moqups.com/Wd4bvKcVQc/view/page/a29d6e4c0",
  },
  {
    id: "synthetic-data",
    title: "Impact of Synthetic Data on Training and Performance of AI Systems",
    type: "Research Project (Volunteering)",
    period: "October 2024 - Present",
    description:
      "Research focused on distinguishing native speaker-written text from text generated by Large Language Models using linguistic analysis techniques and machine learning.",
    technologies: ["Python", "NLP", "Machine Learning", "LLM APIs", "Web Scraping"],
    responsibilities: [
      "Conducting in-depth research on differentiating native speaker-written text from AI-generated content by leveraging linguistic analysis techniques.",
      "Implementing Natural Language Processing (NLP) methodologies, statistical analysis, and computational linguistics to extract unique textual features.",
      "Developing and fine-tuning preliminary machine learning classification models to detect and categorize human vs. AI-generated text with high accuracy.",
      "Utilizing Python, advanced LLM APIs, and web scraping tools to collect large-scale textual datasets for research and analysis.",
      "Exploring the impact of synthetic data augmentation techniques to enhance AI model robustness and improve text classification performance.",
    ],
    icon: BookOpen,
    color: "from-[#1A472A] to-[#2A623D]", // Slytherin colors for research
    image: "/images/project-ai.png",
  },
  {
    id: "safe-harbour",
    title: "Safe Harbour Youth",
    type: "Web Application",
    period: "March 2024 - April 2024",
    description:
      "An online platform designed to support and empower young individuals facing abuse or violence, with features for reporting abuse, connecting with NGOs, and accessing educational resources.",
    technologies: ["React", "Node.js", "Tailwind CSS", "RESTful APIs", "Stripe"],
    responsibilities: [
      "Implemented a user-friendly interface using React and Tailwind CSS for the Youth Connect Portal, allowing youths to report instances of abuse and connect with NGOs.",
      "Developed a secure login and authorization system for NGOs to manage reports and track complaint statuses in the NGO Response Center.",
      "Created a resource-rich platform with educational content and videos using Youth Tube Video embedding to inform and empower users through the Youth Empowerment Hub.",
      "Integrated Stripe for donations and implemented dynamic pie charts to display statistical data on user engagement and complaint resolution.",
    ],
    icon: Shield,
    color: "from-[#740001] to-[#D3A625]", // Gryffindor colors for courage
    image: "/images/project-safe-harbour.png",
  },
  {
    id: "budget-calculator",
    title: "Basic Budget Calculator",
    type: "Web Application",
    period: "June 2024 - July 2024",
    description:
      "A React web application to help users manage monthly expenditures, categorize them, and calculate necessary income to ensure rent does not exceed 33% of total income.",
    technologies: ["React", "Hooks", "ChartJS", "JavaScript", "HTML", "CSS"],
    responsibilities: [
      "Developed a user-friendly interface for adding and categorizing expenditures (Rent, Food, Utilities, Entertainment, Miscellaneous).",
      "Implemented functionality to display expenditures by category and calculate total expenditure per category.",
      "Created a feature to determine required monthly income for rent affordability based on the 33% guideline.",
      "Utilized React Hooks for state management and ChartJS for visual representation of budget data.",
    ],
    icon: Code,
    color: "from-[#0E1A40] to-[#946B2D]", // Ravenclaw colors for wisdom
    image: "/images/project-budget.png",
  },
]

const ProjectCard = ({
  project,
  isExpanded,
  toggleExpand,
}: {
  project: (typeof projects)[0]
  isExpanded: boolean
  toggleExpand: () => void
}) => {
  const isUIUXProject = project.type.includes("UI/UX")

  return (
    <motion.div
      initial={{ opacity: 0, y: 50 }}
      whileInView={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
      viewport={{ once: true }}
      className="mb-8"
    >
      <Card className="overflow-hidden border-0 shadow-lg backdrop-blur-sm bg-card/90 relative">
        <div className={`h-2 bg-gradient-to-r ${project.color}`}></div>
        <CardHeader className="pb-2">
          <div className="flex justify-between items-start">
            <div>
              <CardTitle className="font-cinzel text-xl md:text-2xl text-primary flex items-center">
                <project.icon className="mr-2 h-5 w-5 flex-shrink-0" />
                <span className="break-words">{project.title}</span>
              </CardTitle>
              <CardDescription className="text-base mt-1">
                {project.type} â€¢ {project.period}
              </CardDescription>
            </div>
            <button
              onClick={toggleExpand}
              className="p-2 hover:bg-primary/10 rounded-full transition-colors flex-shrink-0"
              aria-label={isExpanded ? "Collapse project details" : "Expand project details"}
            >
              {isExpanded ? <ChevronUp className="h-5 w-5" /> : <ChevronDown className="h-5 w-5" />}
            </button>
          </div>
        </CardHeader>
        <CardContent className="pb-4">
          <p className="mb-4">{project.description}</p>

          {isExpanded && (
            <motion.div
              initial={{ opacity: 0, height: 0 }}
              animate={{ opacity: 1, height: "auto" }}
              exit={{ opacity: 0, height: 0 }}
              transition={{ duration: 0.3 }}
            >
              <div className={`${isUIUXProject ? "" : "grid md:grid-cols-2"} gap-6 mt-4`}>
                <div>
                  <h4 className="font-cinzel font-semibold mb-2">Key Responsibilities:</h4>
                  <ul className="space-y-2 list-disc pl-5">
                    {project.responsibilities.map((item, i) => (
                      <li key={i} className="text-sm">
                        {item}
                      </li>
                    ))}
                  </ul>

                  {project.demoLink && (
                    <div className="mt-4">
                      <a
                        href={project.demoLink}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="inline-flex items-center text-primary hover:text-primary/80 transition-colors font-medium"
                      >
                        <span className="mr-1">View Demo</span>
                        <svg
                          xmlns="http://www.w3.org/2000/svg"
                          width="16"
                          height="16"
                          viewBox="0 0 24 24"
                          fill="none"
                          stroke="currentColor"
                          strokeWidth="2"
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          className="lucide lucide-external-link"
                        >
                          <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6" />
                          <polyline points="15 3 21 3 21 9" />
                          <line x1="10" x2="21" y1="14" y2="3" />
                        </svg>
                      </a>
                    </div>
                  )}
                </div>
                {!isUIUXProject && project.image && (
                  <div className="relative h-[200px] rounded-md overflow-hidden">
                    <Image
                      src={project.image || "/placeholder.svg"}
                      alt={project.title}
                      fill
                      className="object-cover"
                    />
                    <div className="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent"></div>
                  </div>
                )}
              </div>
            </motion.div>
          )}
        </CardContent>
        <CardFooter className="pt-0 flex flex-wrap gap-2">
          {project.technologies.map((tech, i) => (
            <Badge key={i} variant="outline" className="bg-primary/10 text-primary border-primary/20">
              {tech}
            </Badge>
          ))}
        </CardFooter>
      </Card>
    </motion.div>
  )
}

const ProjectsSection = () => {
  const [expandedProjects, setExpandedProjects] = useState<Record<string, boolean>>({})
  const isMobile = useMediaQuery("(max-width: 768px)")

  const toggleExpand = (projectId: string) => {
    setExpandedProjects((prev) => ({
      ...prev,
      [projectId]: !prev[projectId],
    }))
  }

  return (
    <section id="projects" className="py-20 relative overflow-hidden">
      <div className="container mx-auto px-4 relative z-10">
        <div className="text-center mb-16">
          <h2 className="font-cinzel text-3xl md:text-4xl font-bold mb-4 text-primary">Magical Creations</h2>
          <div className="h-1 w-20 bg-primary mx-auto mb-6"></div>
          <p className="text-muted-foreground max-w-2xl mx-auto">
            Like a skilled wizard crafting powerful spells, I've created these projects using modern technologies and
            creative problem-solving.
          </p>
        </div>

        <div className="max-w-4xl mx-auto">
          <Tabs defaultValue="all" className="w-full mb-8">
            <TabsList className={`grid ${isMobile ? "grid-cols-2" : "grid-cols-4"} mb-8`}>
              <TabsTrigger value="all" className="font-cinzel">
                All Projects
              </TabsTrigger>
              <TabsTrigger value="uiux" className="font-cinzel">
                UI/UX
              </TabsTrigger>
              {!isMobile && (
                <TabsTrigger value="research" className="font-cinzel">
                  Research
                </TabsTrigger>
              )}
              <TabsTrigger value="web" className="font-cinzel">
                Web Apps
              </TabsTrigger>
              {isMobile && (
                <TabsTrigger value="research" className="font-cinzel col-span-2">
                  Research
                </TabsTrigger>
              )}
            </TabsList>

            <TabsContent value="all">
              <div className="space-y-6">
                {projects.map((project) => (
                  <ProjectCard
                    key={project.id}
                    project={project}
                    isExpanded={!!expandedProjects[project.id]}
                    toggleExpand={() => toggleExpand(project.id)}
                  />
                ))}
              </div>
            </TabsContent>

            <TabsContent value="uiux">
              <div className="space-y-6">
                {projects
                  .filter((p) => p.type.includes("UI/UX"))
                  .map((project) => (
                    <ProjectCard
                      key={project.id}
                      project={project}
                      isExpanded={!!expandedProjects[project.id]}
                      toggleExpand={() => toggleExpand(project.id)}
                    />
                  ))}
              </div>
            </TabsContent>

            <TabsContent value="research">
              <div className="space-y-6">
                {projects
                  .filter((p) => p.type.includes("Research"))
                  .map((project) => (
                    <ProjectCard
                      key={project.id}
                      project={project}
                      isExpanded={!!expandedProjects[project.id]}
                      toggleExpand={() => toggleExpand(project.id)}
                    />
                  ))}
              </div>
            </TabsContent>

            <TabsContent value="web">
              <div className="space-y-6">
                {projects
                  .filter((p) => p.type.includes("Web"))
                  .map((project) => (
                    <ProjectCard
                      key={project.id}
                      project={project}
                      isExpanded={!!expandedProjects[project.id]}
                      toggleExpand={() => toggleExpand(project.id)}
                    />
                  ))}
              </div>
            </TabsContent>
          </Tabs>
        </div>
      </div>
    </section>
  )
}

export default ProjectsSection

